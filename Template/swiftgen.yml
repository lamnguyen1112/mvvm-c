## Note: all of the config entries below are just examples with placeholders. Be sure to edit and adjust to your needs when uncommenting.

## In case your config entries all use a common input/output parent directory, you can specify those here.
##   Every input/output paths in the rest of the config will then be expressed relative to these.
##   Those two top-level keys are optional and default to "." (the directory of the config file).
# input_dir: HelloWorld/Resources/
# output_dir: HelloWorld/Resources/

 strings:
   inputs:
     - Template/Resources/Localization/Localizable.strings
   outputs:
     - templateName: structured-swift5
       output: Template/Common/L10n+Generated.swift
       params:
        enumName: L10n

 xcassets:
   - inputs: Template/Resources/Assets.xcassets
     outputs:
        templateName: swift5
        params:
            forceProvidesNamespaces: true
            enumName: Assets
        output: Template/Common/Assets+Generated.swift
        
   - inputs: Template/Resources/Colors.xcassets
     outputs:
        templateName: swift5
        params:
            forceProvidesNamespaces: true
            enumName: AppColors
        output: Template/Common/AppColors+Generated.swift


## Generate constants for your storyboards and XIBs.
##   This one generates 2 output files, one containing the storyboard scenes, and another for the segues.
##    (You can remove the segues entry if you don't use segues in your IB files).
##   For `inputs` we can use "." here (aka "current directory", at least relative to `input_dir` = "MyLib/Sources"),
##    and SwiftGen will recursively find all `*.storyboard` and `*.xib` files in there.
# ib:
#   inputs:
#     - .
#   outputs:
#     - templateName: scenes-swift5
#       output: IB-Scenes+Generated.swift
#     - templateName: segues-swift5
#       output: IB-Segues+Generated.swift


## There are other parsers available for you to use depending on your needs, for example:
##  - `fonts` (if you have custom ttf/ttc font files)
##  - `coredata` (for CoreData models)
##  - `json`, `yaml` and `plist` (to parse custom JSON/YAML/Plist files and generate code from their content)
## â€¦
##
## For more info, use `swiftgen config doc` to open the full documentation on GitHub.
## https://github.com/SwiftGen/SwiftGen/tree/6.6.2/Documentation/
